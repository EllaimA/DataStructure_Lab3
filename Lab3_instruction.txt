Using the frequency table shown below, build a Huffman Encoding Tree. Resolve
ties by giving single-letter groups precedence over multiple-letter groups, then alphabetically. Do not worry about punctuation or capitalization.
Print out the tree by doing a preorder traversal. Print the resulting code. An
example is given below for a 3-letter alphabet. You may use any reasonable
format.

X – 3  The tree in preorder is: XYZ: 6, X: 3, YZ: 3, Y: 1, Z: 2
Y – 1
Z – 2  The code is X = 0; Y = 10, Z = 11;

In your write-up, consider whether you achieved any useful data compression with this method. Compare to conventional encoding. How would your results be
affected by using a different scheme to break ties, for example, if you had given precedence to alphabetical ordering and then to the number of letters in the key? What other structures did you use and why?
